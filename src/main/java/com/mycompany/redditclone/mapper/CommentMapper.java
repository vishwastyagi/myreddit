package com.mycompany.redditclone.mapper;

import com.mycompany.redditclone.dto.CommentsDto;
import com.mycompany.redditclone.model.Comment;
import com.mycompany.redditclone.model.Post;
import com.mycompany.redditclone.model.User;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;

@Mapper(componentModel = "spring")
public interface CommentMapper {
    // We are ignoring id, because id is autogenerated whenever we save comment object in the database
    @Mapping(target = "commentId", ignore = true)
    @Mapping(target = "text", source = "commentsDto.text")
    // java(java.time.Instant.now()), here we are evaluating java expression, hence we used java
    // We have to write full path of Intstant class java.time.Instant, because whenever mapstruct creates the implementation class
    // for this interface, it will not add the import to the class, bcz there is no way to add mport statement to the implementation class
    // If we provide fully qualified name, then we don't have add import statement specifically in the implementation class
    @Mapping(target = "createdDate", expression = "java(java.time.Instant.now())")
    @Mapping(target = "post", source = "post")
    @Mapping(target = "user", source = "user")
    Comment map(CommentsDto commentsDto, Post post, User user);

    @Mapping(target = "postId", expression = "java(comment.getPost().getPostId())")
    @Mapping(target = "userName", expression = "java(comment.getUser().getUsername())")
    @Mapping(target = "id", source = "commentId")
    CommentsDto mapToDto(Comment comment);
}